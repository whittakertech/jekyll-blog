# Preview deployment for drafts and pull requests
name: Deploy Draft Preview

on:
  push:
    branches: [drafts]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  group: "preview-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Build with drafts
        run: |
          bundle exec jekyll build --drafts --future --config _config.yml,_config_preview.yml
        env:
          JEKYLL_ENV: development

      - name: Upload preview artifact
        uses: actions/upload-artifact@v4
        with:
          name: preview-site
          path: _site/
          retention-days: 7

  deploy-preview:
    runs-on: ubuntu-latest
    needs: build-preview
    if: github.event_name == 'push' && github.ref == 'refs/heads/drafts'
    environment:
      name: preview
      url: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/preview
    steps:
      - name: Download preview artifact
        uses: actions/download-artifact@v4
        with:
          name: preview-site
          path: _site/

      - name: Deploy to preview branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site
          publish_branch: gh-pages-preview
          destination_dir: preview

  comment-pr:
    runs-on: ubuntu-latest
    needs: build-preview
    if: github.event_name == 'pull_request'
    steps:
      - name: Comment PR with preview info
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const pr_number = context.payload.pull_request.number;
            
            // Create or update comment with preview info
            const comment_body = `
            ## 📝 Preview Build Complete
            
            Your changes have been built successfully! 
            
            **Build Details:**
            - **Commit**: ${context.sha.substring(0, 7)}
            - **Branch**: \`${context.payload.pull_request.head.ref}\`
            - **Build Time**: ${new Date().toISOString()}
            
            **Next Steps:**
            1. Review the changes locally with \`make serve-drafts\`
            2. Push to \`drafts\` branch for live preview deployment
            3. Merge when ready to publish
            
            *Preview deployments are available when pushed to the \`drafts\` branch.*
            `;
            
            // Check if we already have a comment
            const comments = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: pr_number
            });
            
            const existing_comment = comments.data.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('📝 Preview Build Complete')
            );
            
            if (existing_comment) {
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: existing_comment.id,
                body: comment_body
              });
            } else {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: pr_number,
                body: comment_body
              });
            }
